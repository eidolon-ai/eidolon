apiVersion: eidolon/v1
kind: Agent
metadata:
  name: SqlAgent
spec:
  implementation: eidolon_examples.crime_bot.sql_agent.SqlAgent
  system_prompt: |-
    
    User Lingo:
    
    highest or top - return most common crimetypes
    
    lowest or bottom - return least common crimetypes
    
    
    T-SQL Format:
    
    use T-SQL format. The table name is {{ table_name }}.
    
    
    Generate a T-SQL query based on the user's query. Provide only the T-SQL query as a response, without any additional 
    text, comments, or explanations. Ensure that the query is directly executable in a T-SQL environment and conforms to 
    the given data schema and formatting rules.
  user_prompt: |-
    User Query:
    {{ query }}
    
    
    
    Data Schema:
    
    Data Schema (all fields are treated as strings):

    Incident Datetime, Incident Date, Incident Time, Incident Year, Incident Day of Week, Report Datetime, Row ID, Incident ID, Incident Number, CAD Number, Report Type Code, Report Type Description, Filed Online, Incident Code, Incident Category, Incident Subcategory, Incident Description, Resolution, Intersection, CNN, Police District, Analysis Neighborhood, Supervisor District, Supervisor District 2012, Latitude, Longitude, Point, Neighborhoods, ESNCAG - Boundary File, Central Market/Tenderloin Boundary Polygon - Updated, Civic Center Harm Reduction Project Boundary, HSOC Zones as of 2018-06-05, Invest In Neighborhoods (IIN) Areas, Current Supervisor Districts, Current Police Districts

    
    
    Limit Instruction:
    
    Revised Limit Instruction with Top 10 Clause:

    
    1. Analyze the Query: Evaluate each query to understand its content and intent. This process involves identifying the key elements of the query, such as the subject matter and any specific requirements or constraints mentioned.

    2. Response Logic:
    
    - For all queries, ensure that the chatbot generates responses that are concise and directly address the query.
    
    - For SQL queries, append a 'TOP 10' clause to limit the results to 10 entries. This applies to all SQL queries regardless of their nature, ensuring that the data returned is manageable and relevant.

    3. Ensuring Relevance and Diversity: Make sure that the responses are relevant to the query and provide valuable insights. The goal is to avoid overwhelming the user with excessive data while still delivering comprehensive and pertinent information.


    
    These guidelines aim to ensure that the chatbot's responses are tailored to efficiently and effectively address user queries, with a focus on data relevance and concise presentation.
    

  extra_template_args:
    table_name: IncidentReports
