---
import Layout from '~/layouts/PageLayout.astro';

import Hero2 from '~/components/widgets/Hero2.astro';
import Steps from '~/components/widgets/Steps.astro';
import Content from '~/components/widgets/Content.astro';
import FAQs from '~/components/widgets/FAQs.astro';
import WidgetWrapper from "../components/ui/WidgetWrapper.astro";
import Item from "../components/blog/GridItem.astro";
import LinkUnfurl from "../components/widgets/LinkUnfurl.astro";
import SpeedInsights from "@vercel/speed-insights/astro"
import ContentWithTabs from "../components/widgets/ContentWithTabs.astro";
import Carousel from "../components/widgets/Carousel.astro";
import MainTitle from "../components/widgets/MainTitle.astro";
import {findImage} from "../utils/images";
import {astroAsseetsOptimizer, getImagesOptimized} from "../utils/images-optimization";
import ContentWithTabs from "../components/widgets/ContentWithTabs.astro";
import { readFileSync } from 'fs';


const metadata = {
  title: 'Eidolon -- Build LLM Agents as Services',
  ignoreTitleTemplate: true,
};

const bg = await Astro.slots.render("bg")


// todo -- change stars button to black
// todo -- add tab index

// const data = await fetch("https://api.github.com/repos/eidolon-ai/eidolon").then((response) => response.json())

// const numStars = data.stargazers_count || " "

const githubIcon = `<svg preserveAspectRatio="xMidYMid meet" viewBox="0 0 98 96" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" 
d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" 
fill="currentColor"/></svg>`

const githubText = `<div style="height: 16px; width: 16px">${githubIcon}</div>&nbsp;&nbsp;Stars`
---

<Layout metadata={metadata}>
  <!-- Hero Widget ******************* -->

  <MainTitle
    actions={[
      {
        color: 'secondary',
        text: githubText,
        href: 'https://github.com/eidolon-ai/eidolon',
        target: '_blank',
      },
      {text: 'Quickstart', href: '/docs/quickstart', color: 'primary'},
    ]}
  >
    <Fragment slot="tagline">
      <span class="text-center">
      AI Agent Server for the Enterprise
      </span>
    </Fragment>
    <Fragment slot="content">
      <span class="text-center leading-8">
        <span class="text-2xl md:text-3xl">Open source framework to rapidly build and deploy genAI apps</span>
        <br/>
        <span class="text-sm font-semibold tracking-tighter md:text-2xl">Maintain control | Reduce complexity | Increase accuracy</span>
      </span>
    </Fragment>
  </MainTitle>

  <div class="mb-16"/>
  <!-- Content Widget **************** -->

  <ContentWithTabs
    items={[
      {
        title: 'Choose from a variety of pre-built agents or define your own',
        description:
          "Eidolon provides a variety of pre-built agents to get you started. You can also define your own agents using vanilla code or any other agent frameworkk you like.",
      },
      {
        title: 'Define agents with declarative YAML',
        description: "Eidolon's simple declarative YAML syntax makes it easy to define agents. Agents can be as simple as a single line or as complex as needed.",
      },
      {
        title: 'Build agents that work together',
        description:
          "Add RAG storage to any application using simple services. Eidolon provides the flexibility to customize RAG to fit your needs.",
      },
    ]}
    tabs={[
      {
        title: "Multi-Model Chatbot",
        language: 'yaml',
        code: `apiVersion: eidolon/v1
kind: Agent
metadata:
  name: multi-model-chatbot

spec:
  system_prompt:
    You are a helpful assistant. Output all multi-media content as embedded content including image, video, and audio. Only generate images or speach if directly asked by the user.
  apus:
    - { apu: GPT4-turbo, title: GPT4 Turbo, default: true }
    - { apu: MistralLarge, title: Mistral Large }
    - { apu: Llamma3-8b, title: Llamma3 8b }
    - { apu: ClaudeOpus, title: Claude Opus }
    - { apu: ClaudeSonnet, title: Claude Sonnet }
`
      },
      {
        title: "RAG",
        language: 'yaml',
        code: `---
apiVersion: eidolon/v1
kind: Agent
metadata:
  name: agent

spec:
  description: An agent that searches the eidolon code and documentation
  agent_refs: ["doc-search"]
  system_prompt: You are a software expert responsible for answering questions about a code base.
---
apiVersion: eidolon/v1
kind: Agent
metadata:
  name: doc-search

spec:
  implementation: RetrieverAgent
  description: "Search the Eidolon github repository for code, examples, and documentation"
  document_manager:
    loader:
      implementation: GitHubLoader
      owner: "eidolon-ai"
      repo: "eidolon"
      pattern: [ "**/*.md", "**/*.py" ]
      exclude: "**/test/**/*"
`
      },
      {
        title: "Agent-Agent Communication",
        language: 'yaml',
        code: `---
apiVersion: eidolon/v1
kind: Agent
metadata:
  name: manager

spec:
  system_prompt:
    You are a tech manager servicing user requests. You manage a team of engineers and qa workers. Work with your team as needed to answer user questions.
  agent_refs: ["engineer", "qa"]
---
apiVersion: eidolon/v1
kind: Agent
metadata:
  name: manager

spec:
  system_prompt:
    You are a tech manager servicing user requests. You manage a team of engineers and qa workers. Work with your team as needed to answer user questions.
  agent_refs: ["engineer", "qa"]
---
apiVersion: eidolon/v1
kind: Agent
metadata:
  name: engineer

spec:
  system_prompt:
    You are an engineer. Your manager (user) will come to with questions. Work with the qa team as needed to answer user questions.
  agent_refs: ["qa"] 
---
apiVersion: eidolon/v1
kind: Agent
metadata:
  name: qa

spec:
  system_prompt: You are a qa engineer. Quality is your top concern.
`
      }
    ]}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">1. Build</h3>
      Defining agents is fast and easy.
    </Fragment>

    <Fragment slot="bg">
      <div class="absolute inset-0 bg-gray-100 dark:bg-blue-950"></div>
    </Fragment>
  </ContentWithTabs>

  <!-- Content Widget **************** -->

  <ContentWithTabs
    isReversed
    items={[
      {
        title: 'Deploy directly to Kubernetes',
        description:
          'Agents are infrastructure and should be deployed as such. Deploy directly using your organizations Kubernetes management tools / pipeline.',
      },
      {
        title: 'Scale agents as needed',
        description:
          'Agents are stateless and scale horizontally to meet your needs.',
      },
      {
        title: 'Build safely with enforceable policies',
        description:
          'With kubernetes deployment, you can enforce policies to ensure your agents are deployed with access only to the resources they need.',
      },
    ]}
    tabs={[
      {
        language: 'bash',
        code: `
% helm repo add eidolon https://eidolonai.com/charts
... 
% helm install eidolon eidolon-operator/eidolon-operator-chart
...
% kubectl apply -f agent.yaml
agent.server.eidolonai.com/agent created
% kubectl get agents
NAME      AGE
chatbot   3s`
      }
    ]}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">2. Deploy</h3>
      What good is an agent that can't be deployed?
    </Fragment>

    <Fragment slot="bg">
      <div class="absolute inset-0 bg-white dark:bg-transparent"></div>
    </Fragment>
  </ContentWithTabs>

  <ContentWithTabs
    items={[
      {
        title: 'Build a gui with React components',
        description:
          'Eidolon provides a variety of pre-built agents to get you started. You can also define your own agents using vanilla code or any other agent frameworkk you like.',
      },
      {
        title: 'Run actions directly through HTTP REST API',
        description:
          'At the end of the day, agents are just http services. You can run actions directly through the REST API or use the Eidolon webui to interact with your agents.',
      },
      {
        title: 'Hack away with the CLI',
        description:
          'Eidolon provides a CLI to help you interact with your agents in a more ad-hoc manner. The CLI is a powerful tool to help you experiment with your agents quickly.',
      },
    ]}
    tabs={[
      {
        title: "CLI",
        src: "~/assets/images/cli.svg",
        alt: "CLI",
      },
      {
        title: "Python",
        language: 'py',
        code: `from eidolon_ai_client.client import Agent

agent = Agent.get("HelloWorld")
process = await agent.create_process()
body = "Why should I use Eidolon?"
response = await process.action("converse", body)

assert "fast iteration times" in response.data
assert "extensible agent mesh" in response.data
assert "supportive community" in response.data`
      },
      {
        title: "Typescript",
        language: 'ts',
        code: `import {EidolonClient} from "../src/client";

const client = new EidolonClient()
const {process: p1} = await client.createProcess("HelloWorld")
const process = client.process(p1.process_id)
const agent = process.agent("HelloWorld")
const body = "Why should I use Eidolon?"
const response = await agent.action("converse", body)

expect(response).toContain("fast iteration times")
expect(response).toContain("extensible agent mesh")
expect(response).toContain("supportive community")`,
      },
      {
        title: "WebUI",
        src: "~/assets/images/webui.gif",
        alt: "RAG",
      },
      // {
      //   title: "React",
      //   language: 'ts',
      //   code: `todo`,
      // },
    ]}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">3. Consume</h3>
      GenAI applications need to consume agents in a diverse set of ways.
    </Fragment>

    <Fragment slot="bg">
      <div class="absolute inset-0 bg-gray-50 dark:bg-blue-950"></div>
    </Fragment>
  </ContentWithTabs>

  <!-- Steps Widget ****************** -->

  <!--<Steps-->
  <!--  title="Build genAI apps in no time with Eidolon."-->
  <!--  items={[-->
  <!--    {-->
  <!--      title: 'Step 1: <span class="font-medium">Install Eidolon SDK\n</span>',-->
  <!--      description: "Download and install the Eidolon SDK from <a href='https://pypi.org/project/eidolon-ai-sdk/'><u>PYPI</u></a> or get started with a <a href='https://github.com/eidolon-ai/agent_machine'><u>Template Repository</u></a>.",-->
  <!--      icon: 'tabler:package',-->
  <!--    },-->
  <!--    {-->
  <!--      title: 'Step 2: <span class="font-medium">Create your Agents</span>',-->
  <!--      description:-->
  <!--        "Build agent using our out of the box components. Customize them or build new components as needed!",-->
  <!--      icon: 'tabler:letter-case',-->
  <!--    },-->
  <!--    {-->
  <!--      title: 'Step 3: <span class="font-medium">Integrate your App</span>',-->
  <!--      description:-->
  <!--        "Agents are http services, so you can integrate them into your app with ease or leverage Eidolon's <a href='https://github.com/eidolon-ai/eidolon/tree/main/webui'><u>built-in webui</u></a> to deploy a chatbot interface.",-->
  <!--      icon: 'tabler:paint',-->
  <!--    },-->
  <!--    {-->
  <!--      title: 'Ready!',-->
  <!--      icon: 'tabler:check',-->
  <!--    },-->
  <!--  ]}-->
  <!--  image={{-->
  <!--    src: '~/assets/images/clock.webp',-->
  <!--    alt: 'Steps image',-->
  <!--  }}-->
  <!--/>-->

  <!-- Features2 Widget ************** -->

  <!--
    <Features2
      title="Most used widgets"
      subtitle="Provides frequently used components for building websites using Tailwind CSS"
      tagline="Components"
      items={[
        {
          title: 'Headers',
          description: "Ever tried driving without GPS? Boom! That's why websites need headers for direction.",
          icon: 'flat-color-icons:template',
        },
        {
          title: 'Heros',
          description:
            "Picture a superhero landing – epic, right? That's the job of a Hero section, making grand entrances!",
          icon: 'flat-color-icons:gallery',
        },
        {
          title: 'Features',
          description:
            'Where websites strut their stuff and show off superpowers. No holding back on the bragging rights here!',
          icon: 'flat-color-icons:approval',
        },
        {
          title: 'Content',
          description:
            "Dive into the meat and potatoes of a site; without it, you'd just be window shopping. Content is king.",
          icon: 'flat-color-icons:document',
        },
        {
          title: 'Call-to-Action',
          description:
            'That enthusiastic friend who\'s always urging, "Do it! Do it!"? Yeah, that\'s this button nudging you towards adventure.',
          icon: 'flat-color-icons:advertising',
        },
        {
          title: 'Pricing',
          description: 'Behold the dessert menu of the website world. Tempting choices await, can you resist?',
          icon: 'flat-color-icons:currency-exchange',
        },
        {
          title: 'Testimonial',
          description: 'Step into the gossip corner! Here, other visitors spill the beans and share the juicy details.',
          icon: 'flat-color-icons:voice-presentation',
        },
        {
          title: 'Contact',
          description:
            'Like a digital mailbox, but faster! Drop a line, ask a question, or send a virtual high-five. Ding! Message in.',
          icon: 'flat-color-icons:business-contact',
        },
        {
          title: 'Footers',
          description: "The footer's like the credits of a movie but sprinkled with easter eggs. Time to hunt!",
          icon: 'flat-color-icons:database',
        },
      ]}
    >
      <Fragment slot="bg">
        <div class="absolute inset-0 bg-blue-50 dark:bg-transparent"></div>
      </Fragment>
    </Features2>
  -->

  <!-- HighlightedPosts Widget ******* -->
  <!--
    <WidgetWrapper isDark={false} bg={bg} id="events">
      <div class="flex flex-col lg:justify-between lg:flex-row mb-8">
        <div class="md:max-w-sm">
          <h2
            class="text-3xl font-bold tracking-tight sm:text-4xl sm:leading-none group font-heading mb-2"
            set:html={"Events"}
          />
          &lt;!&ndash;
                      {APP_BLOG.list.isEnabled && linkText && linkUrl && (
                        <Button variant="link" href={linkUrl}> {linkText} »</Button>
                      )}
          &ndash;&gt;
        </div>
      </div>
  
      <div class="grid gap-6 row-gap-5 md:grid-cols-2 lg:grid-cols-3 -mb-6">
        <LinkUnfurl url="https://lu.ma/2qud1jh1"/>
        <LinkUnfurl url="https://lu.ma/z2kghncv"/>
        <LinkUnfurl url="https://lu.ma/127rux39"/>
      </div>
      &lt;!&ndash;<Grid posts={posts}/>&ndash;&gt;
    </WidgetWrapper>
  -->

  <!-- Stats Widget ****************** -->

  <!--
    <Stats
      stats={[
        {title: 'Downloads', amount: '132K'},
        {title: 'Stars', amount: '24.8K'},
        {title: 'Forks', amount: '10.3K'},
        {title: 'Users', amount: '48.4K'},
      ]}
    />
  -->

  <!-- CallToAction Widget *********** -->

  <!--  <CallToAction
      actions={[
        {
          variant: 'primary',
          text: 'Get template',
          href: 'https://github.com/eidolon-ai/eidolon',
          target: '_blank',
          icon: 'tabler:download',
        },
      ]}
    >
      <Fragment slot="title">
        Astro&nbsp;+&nbsp;<br class="block sm:hidden"/><span class="sm:whitespace-nowrap">Tailwind CSS</span>
      </Fragment>
  
      <Fragment slot="subtitle">
        Be very surprised by these huge fake numbers you are seeing on this page. <br class="hidden md:inline"/>Don't
        waste more time! :P
      </Fragment>
    </CallToAction>-->
</Layout>
