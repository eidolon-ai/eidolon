name: Test Python
on:
  push:
    branches: [main]
    paths:
      - '**'
      - '!k8s-operator/**'
      - '!webui/**'
      - '!examples/**'
      - '!.all-contributorsrc'
      - '!README.md'
  workflow_dispatch:
  pull_request:
    paths:
      - '**'
      - '!k8s-operator/**'
      - '!webui/**'
      - '!examples/**'
      - '!.all-contributorsrc'
      - '!README.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lock-files-up-to-date:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: make lock
      - name: Checking if lock files are out of date, (run "make lock" to fix)
        run: |
          git status
          git diff --quiet
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: always()
        with:
          commit_message: "updating lock"

  sdk-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'
      - run: poetry install -E all
        working-directory: sdk
      - run: poetry run playwright install
        working-directory: sdk
      - run: poetry run ruff format .
        working-directory: sdk
      - run: poetry run ruff check .
        working-directory: sdk
      - run: poetry run pytest
        env:
          OPENAI_API_KEY: intentionally_unused
        working-directory: sdk

  sdk-test-local-memory:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry ${{ matrix.python-version }}
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - run: poetry install -E all
        working-directory: sdk
      - run: poetry run playwright install
        working-directory: sdk
      - run: poetry run pytest --symbolic_memory local
        env:
          OPENAI_API_KEY: intentionally_unused
        working-directory: sdk

  usage-service-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'
      - run: poetry install
        working-directory: usage-service/usage-server
      - run: poetry run ruff format .
        working-directory: usage-service/usage-server
      - run: poetry run ruff check .
        working-directory: usage-service/usage-server
      - run: poetry run pytest
        working-directory: usage-service/usage-server
