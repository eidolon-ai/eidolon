---
import {Icon} from "astro-icon/components";
import Logo from "~/components/Logo.astro";
import ToggleTheme from "~/components/common/ToggleTheme.astro";
import ToggleMenu from "~/components/common/ToggleMenu.astro";
import Button from "~/components/ui/Button.astro"

import {getHomePermalink} from "~/utils/permalinks";
import {trimSlash} from "~/utils/permalinks";
import type {CallToAction} from "~/types";
import Image from "../common/Image.astro";

import '@docsearch/css';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
  showMenu?: boolean;
}

const {
  id = "header",
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = "center",
  showMenu = true,
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`

const githubIcon = `<svg preserveAspectRatio="xMidYMid meet" viewBox="0 0 98 96" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" 
d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" 
fill="currentColor"/></svg>`
const githubText = `<div style="height: 24px; width: 24px">${githubIcon}</div>`

// const data = await fetch("https://api.github.com/repos/eidolon-ai/eidolon").then((response) => response.json())
// const numStars = data.stargazers_count || " "
---

<header
  class:list={[
    {sticky: isSticky, relative: !isSticky, dark: isDark},
    "top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out text-black",
  ]}
  {...isSticky ? { "data-aw-sticky-header":  true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0 black"></div>
  <div
    class:list={[
      "relative text-default px-4 w-full md:flex md:justify-between",
    ]}
  >
    <div class:list={[{"mr-auto rtl:mr-0 rtl:ml-auto": position === "right"}, "flex justify-between"]}>
      <a class="flex items-center pt-2" href={getHomePermalink()}>
        <Logo/>
      </a>
      {showMenu && (
        <div class="flex items-center md:hidden">
          <ToggleMenu/>
        </div>
      )}
    </div>

    <nav class="items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5">
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium"
      >
        {
          links.map(({text, href, links}) => (
            <li class={links?.length ? "dropdown" : ""}>
              {links?.length ? (
                <>
                  <button class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center">
                    {text}
                    <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline"/>
                  </button>
                  <ul
                    class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({text: text2, href: href2}) => (
                      <li>
                        <a
                          class:list={[
                            "first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap",
                            {"aw-link-active": href2 === currentPath}
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    "hover:text-link dark:hover:text-white px-4 py-3 flex items-centers",
                    {"aw-link-active": href === currentPath}
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        {"ml-auto rtl:ml-0 rtl:mr-auto": position === "left"},
        "hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0",
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button {...btnProps} variant="link" class="ml-2 py-2.5 px-2.5 md:px-3 font-semibold shadow-none hover:underline text-sm w-auto"/>
              ))}
            </span>
          ) : (
            ""
          )
        }
        <div id="docsearchbtn" style="color: #000000"
             class="mr-2 bg-gray-50 dark:bg-gray-500 rounded-md hover:border-primary dark:hover:border-primary border-2 border-gray-100 dark:border-gray-400"/>
        <div style="display:flex; flex-direction: row; align-items: center; justify-content: center">
          {
            <Button href="https://github.com/eidolon-ai/eidolon" variant="link" class="py-2.5 px-2.0 font-semibold shadow-none hover:underline text-sm w-auto capitalize"
            >
              <div set:html={githubText}></div>
            </Button>
          }
        </div>
        <div style="display:flex; flex-direction: row; align-items: center; justify-content: center">
          <Button href="https://discord.gg/6kVQrHpeqG" variant="link" class="ml-2 py-2.5 px-1 md:px-1 font-semibold shadow-none hover:underline text-sm w-auto capitalize">
            <Image height="32" width="32" src='~/assets/images/discord.svg' alt="Discord" class="w-6 h-6 md"/>
          </Button>
          &nbsp;
        </div>
        <div class="flex">
          {showToggleTheme &&
            <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block"/>}
          {
          }
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import '@docsearch/css';
    import docsearch from '@docsearch/js';
    import "./search.css"

    docsearch({
      appId: "EEA60PZVA2",
      apiKey: "6bbd9d76e8fc77e3e7744c572534d1dd",
      indexName: "eidolonai",
      container: '#docsearchbtn',
      placeholder: 'Search documentation',
      } as any);
</script>
